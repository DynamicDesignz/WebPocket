import requests
from lib.BaseExploit import BaseExploit
from lib.ExploitOption import ExploitOption


class Exploit(BaseExploit):

    def __init__(self):
        super(Exploit, self).__init__()
        self.update_info({
            "name": "phpcms 9.6.0 register getshell",
            "description": "phpcms 9.6.0 register page getshell",
            "author": ["unknown"],
            "references": [
                "https://www.hackersb.cn/hacker/219.html",
            ],
            "disclosure_date": "2017-04-14",
            "service_name": "phpcms",
            "service_version": "9.6.0",
        })
        self.register_options([
            ExploitOption(
                name="host",
                required=True,
                description="The target domain",
                value=None
            ),
            ExploitOption(
                name="password",
                required=True,
                description="webshell password",
                value=None
            ),
        ])

    def check(self):
        webshell = "http://www.hackersb.cn/shell.php"
        if len(webshell):
            self.results.success(
                message="Target {} has vul".format(self.options.get_option("host"))
            )
        else:
            self.results.failure(error_message="Target {} no vulnerability".format(self.options.get_option("host")))
        return self.results

    def exploit(self):
        requests.get(self.options.get_option("host"))
        webshell = "http://www.hackersb.cn/shell.php"
        if len(webshell):
            self.results.success(
                data={
                    "target": self.options.get_option("host"),
                    "webshell": webshell
                },
                message="Webshell: {}".format(webshell)
            )
        else:
            self.results.failure(error_message="No vulnerability")
        return self.results
